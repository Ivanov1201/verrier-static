{"version":3,"sources":["app/modules/ECommerce/pages/customers/customers-loading-dialog/CustomersLoadingDialog.js","app/modules/ECommerce/_redux/customers/customersActions.js","app/modules/ECommerce/_redux/customers/customersCrud.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialogHeader.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditForm.js","app/modules/ECommerce/pages/customers/CustomersUIHelpers.js","app/modules/ECommerce/pages/customers/CustomersUIContext.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialog.js","app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-delete-dialog/CustomersDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js","app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js","app/modules/ECommerce/pages/customers/customers-filter/CustomersFilter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/TypeColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js","app/modules/ECommerce/pages/customers/customers-grouping/CustomersGrouping.js","app/modules/ECommerce/pages/customers/CustomersCard.js","app/modules/ECommerce/pages/customers/CustomersPage.js","app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js","app/modules/ECommerce/_redux/products/productsActions.js","app/modules/ECommerce/_redux/products/productsCrud.js","app/modules/ECommerce/pages/products/ProductsUIHelpers.js","app/modules/ECommerce/pages/products/ProductsUIContext.js","app/modules/ECommerce/pages/products/product-delete-dialog/ProductDeleteDialog.js","app/modules/ECommerce/pages/products/products-delete-dialog/ProductsDeleteDialog.js","app/modules/ECommerce/pages/products/products-fetch-dialog/ProductsFetchDialog.js","app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.js","app/modules/ECommerce/pages/products/products-filter/ProductsFilter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ConditionColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ColorColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/PriceColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/ProductsTable.js","app/modules/ECommerce/pages/products/products-grouping/ProductsGrouping.js","app/modules/ECommerce/pages/products/ProductsCard.js","app/modules/ECommerce/pages/products/ProductsPage.js","app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFilter.js","app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/pages/products/product-specifications/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFetchDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsGrouping.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialogHeader.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js","app/modules/ECommerce/pages/products/product-specifications/Specifications.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIHelper.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/products/product-remarks/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js","app/modules/ECommerce/pages/products/product-remarks/RemarksLoadingDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarkDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksGrouping.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialog.js","app/modules/ECommerce/pages/products/product-remarks/Remarks.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/eCommercePage.js"],"names":["CustomersLoadingDialog","isLoading","useSelector","state","customers","listLoading","shallowEqual","useEffect","text","actions","customersSlice","fetchCustomers","queryParams","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","customersFetched","catch","error","clientMessage","catchError","fetchCustomer","id","action","customerId","get","customer","customerFetched","customerForEdit","undefined","deleteCustomer","delete","customerDeleted","createCustomer","customerForCreation","customerCreated","updateCustomer","put","customerUpdated","updateCustomersStatus","ids","status","customersStatusUpdated","deleteCustomers","customersDeleted","CustomerEditDialogHeader","actionsLoading","useState","title","setTitle","_title","firstName","lastName","Modal","Header","closeButton","Title","CustomerEditSchema","Yup","shape","min","max","required","email","userName","dateOfBbirth","nullable","ipAddress","CustomerEditForm","saveCustomer","onHide","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","Body","className","name","component","Input","placeholder","label","type","customFeedbackLabel","value","Footer","onClick","CustomerStatusCssClasses","CustomerStatusTitles","CustomerTypeCssClasses","CustomerTypeTitles","defaultSorted","dataField","order","sizePerPageList","initialFilter","filter","sortOrder","sortField","pageNumber","pageSize","CustomersUIContext","createContext","useCustomersUIContext","useContext","Consumer","CustomersUIProvider","customersUIEvents","children","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","initCustomer","gender","newCustomerButtonClick","openEditCustomerDialog","openDeleteCustomerDialog","openDeleteCustomersDialog","openFetchCustomersDialog","openUpdateCustomersStatusDialog","Provider","CustomerEditDialog","show","customersUIContext","customersUIProps","useMemo","useDispatch","size","aria-labelledby","CustomerDeleteDialog","CustomersDeleteDialog","length","selectedCustomers","_customers","forEach","find","el","push","CustomersFetchDialog","map","key","CustomersUpdateStateDialog","setStatus","onChange","e","target","CustomersFilter","applyFilter","newQueryParams","searchText","prepareFilter","handleBlur","setFieldValue","handleChange","onBlur","StatusColumnFormatter","cellContent","row","TypeColumnFormatter","ActionsColumnFormatter","rowIndex","src","toAbsoluteUrl","CustomersTable","currentState","columns","sort","sortCaret","headerSortingClasses","formatter","columnFormatters","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bordered","bootstrap4","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","CustomersGrouping","CustomersCard","CustomersPage","history","path","match","params","ProductsLoadingDialog","products","productsSlice","fetchProducts","productsFetched","fetchProduct","productId","product","productFetched","productForEdit","deleteProduct","productDeleted","createProduct","productForCreation","productCreated","updateProduct","productUpdated","updateProductsStatus","productsStatusUpdated","deleteProducts","productsDeleted","ProductStatusCssClasses","ProductStatusTitles","ProductConditionCssClasses","ProductConditionTitles","model","manufacture","VINCode","AVAILABLE_COLORS","AVAILABLE_MANUFACTURES","ProductsUIContext","useProductsUIContext","ProductsUIProvider","productsUIEvents","newProductButtonClick","openEditProductPage","openDeleteProductDialog","openDeleteProductsDialog","openFetchProductsDialog","openUpdateProductsStatusDialog","ProductDeleteDialog","productsUIContext","productsUIProps","variant","ProductsDeleteDialog","selectedProducts","_products","ProductsFetchDialog","width","ProductsUpdateStatusDialog","ProductsFilter","condition","ConditionColumnFormatter","ColorColumnFormatter","color","PriceColumnFormatter","price","OverlayTrigger","overlay","Tooltip","ProductsTable","ProductsGrouping","ProductsCard","ProductsPage","ProductEditSchema","modelYear","mileage","ProductEditForm","btnRef","saveProduct","index","as","display","ref","SPECIFICATIONS_DICTIONARY","SpecificationsUIContext","useSpecificationsUIContext","SpecificationsUIProvider","currentProductId","setProductId","selectedId","setSelectedId","initSpecification","specId","carId","showEditSpecificationDialog","setShowEditSpecificationDialog","showDeleteSpecificationDialog","setShowDeleteSpecificationDialog","showDeleteSpecificationsDialog","setShowDeleteSpecificationsDialog","showFetchSpecificationsDialog","setShowFetchSpecificationsDialog","openEditSpecificationDialog","openNewSpecificationDialog","closeEditSpecificationDialog","openDeleteSpecificationDialog","closeDeleteSpecificationDialog","openDeleteSpecificationsDialog","closeDeleteSpecificationsDialog","openFetchSpecificationsDialog","closeFetchSpecificationsDialog","SpecificationsFilter","specsUIContext","specsUIProps","specificationsSlice","fetchSpecifications","specificationsFetched","fetchSpecification","specificationId","specification","specificationFetched","specificationForEdit","deleteSpecification","specificationDeleted","createSpecification","specificationForCreation","specificationCreated","updateSpecification","specificationUpdated","deleteSpecifications","specificationsDeleted","SpecificationsTable","specifications","SpecificationsLoadingDialog","SpecificationsDeleteDialog","SpecificationDeleteDialog","selectedSpecifications","_specifications","SpecificationsFetchDialog","SpecificationsGrouping","SpecificationEditDialogHeader","SpecificationEditSchema","SpecificationEditForm","saveSpecification","spec","SpecificationEditDialog","Specifications","RemarksUIContext","useRemarksUIContext","RemarksUIProvider","showEditRemarkDialog","setShowEditRemarkDialog","initRemark","dueDate","showDeleteRemarkDialog","setShowDeleteRemarkDialog","showDeleteRemarksDialog","setShowDeleteRemarksDialog","showFetchRemarksDialog","setShowFetchRemarksDialog","openNewRemarkDialog","openEditRemarkDialog","closeEditRemarkDialog","openDeleteRemarkDialog","closeDeleteRemarkDialog","openDeleteRemarksDialog","closeDeleteRemarksDialog","openFetchRemarksDialog","closeFetchRemarksDialog","RemarksFilter","remarksUIContext","remarksUIProps","remarksSlice","fetchRemarks","remarksFetched","fetchRemark","remarkId","remark","remarkFetched","remarkForEdit","deleteRemark","remarkDeleted","createRemark","remarkForCreation","remarkCreated","updateRemark","remarkUpdated","deleteRemarks","console","log","remarksDeleted","RemarksTable","remarks","RemarksLoadingDialog","RemarksDeleteDialog","RemarkDeleteDialog","selectedRemarks","_remarks","RemarksFetchDialog","RemarksGrouping","RemarkEditDialogHeader","RemarkEditSchema","RemarkEditForm","saveRemark","RemarkEditDialog","date","year","getFullYear","month","getMonth","toString","day","getDate","getFormattedDate","Remarks","initProduct","description","ProductEdit","suhbeader","useSubheader","tab","setTab","useRef","backToProductsList","current","click","role","data-toggle","aria-selected","eCommercePage","fallback","exact","from","to"],"mappings":"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","file":"static/js/7.777fbf9f.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\n\nexport function CustomersLoadingDialog() {\n  // Customers Redux state\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.customers.listLoading }),\n    shallowEqual\n  );\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n","import * as requestFromServer from \"./customersCrud\";\nimport {customersSlice, callTypes} from \"./customersSlice\";\n\nconst {actions} = customersSlice;\n\nexport const fetchCustomers = queryParams => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.list }));\n  return requestFromServer\n    .findCustomers(queryParams)\n    .then(response => {\n      const { totalCount, entities } = response.data;\n      dispatch(actions.customersFetched({ totalCount, entities }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find customers\";\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\n    });\n};\n\nexport const fetchCustomer = id => dispatch => {\n  if (!id) {\n    return dispatch(actions.customerFetched({ customerForEdit: undefined }));\n  }\n\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .getCustomerById(id)\n    .then(response => {\n      const customer = response.data;\n      dispatch(actions.customerFetched({ customerForEdit: customer }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find customer\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteCustomer = id => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteCustomer(id)\n    .then(response => {\n      dispatch(actions.customerDeleted({ id }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete customer\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const createCustomer = customerForCreation => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .createCustomer(customerForCreation)\n    .then(response => {\n      const { customer } = response.data;\n      dispatch(actions.customerCreated({ customer }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't create customer\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateCustomer = customer => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateCustomer(customer)\n    .then(() => {\n      dispatch(actions.customerUpdated({ customer }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update customer\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateCustomersStatus = (ids, status) => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateStatusForCustomers(ids, status)\n    .then(() => {\n      dispatch(actions.customersStatusUpdated({ ids, status }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update customers status\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteCustomers = ids => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteCustomers(ids)\n    .then(() => {\n      dispatch(actions.customersDeleted({ ids }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete customers\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n","import axios from \"axios\";\n\nexport const CUSTOMERS_URL = \"api/customers\";\n\n// CREATE =>  POST: add a new customer to the server\nexport function createCustomer(customer) {\n  return axios.post(CUSTOMERS_URL, { customer });\n}\n\n// READ\nexport function getAllCustomers() {\n  return axios.get(CUSTOMERS_URL);\n}\n\nexport function getCustomerById(customerId) {\n  return axios.get(`${CUSTOMERS_URL}/${customerId}`);\n}\n\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\n// items => filtered/sorted result\nexport function findCustomers(queryParams) {\n  return axios.post(`${CUSTOMERS_URL}/find`, { queryParams });\n}\n\n// UPDATE => PUT: update the customer on the server\nexport function updateCustomer(customer) {\n  return axios.put(`${CUSTOMERS_URL}/${customer.id}`, { customer });\n}\n\n// UPDATE Status\nexport function updateStatusForCustomers(ids, status) {\n  return axios.post(`${CUSTOMERS_URL}/updateStatusForCustomers`, {\n    ids,\n    status\n  });\n}\n\n// DELETE => delete the customer from the server\nexport function deleteCustomer(customerId) {\n  return axios.delete(`${CUSTOMERS_URL}/${customerId}`);\n}\n\n// DELETE Customers by ids\nexport function deleteCustomers(ids) {\n  return axios.post(`${CUSTOMERS_URL}/deleteCustomers`, { ids });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function CustomerEditDialogHeader({ id }) {\n  // Customers Redux state\n  const { customerForEdit, actionsLoading } = useSelector(\n    (state) => ({\n      customerForEdit: state.customers.customerForEdit,\n      actionsLoading: state.customers.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  const [title, setTitle] = useState(\"\");\n  // Title couting\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Customer\";\n    if (customerForEdit && id) {\n      _title = `Edit customer '${customerForEdit.firstName} ${customerForEdit.lastName}'`;\n    }\n\n    setTitle(_title);\n    // eslint-disable-next-line\n  }, [customerForEdit, actionsLoading]);\n\n  return (\n    <>\n      {actionsLoading && <ModalProgressBar />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\n      </Modal.Header>\n    </>\n  );\n}\n","// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Input,\n  Select,\n  DatePickerField,\n} from \"../../../../../../_metronic/_partials/controls\";\n\n// Validation schema\nconst CustomerEditSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(3, \"Minimum 3 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Firstname is required\"),\n  lastName: Yup.string()\n    .min(3, \"Minimum 3 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Lastname is required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Email is required\"),\n  userName: Yup.string().required(\"Username is required\"),\n  dateOfBbirth: Yup.mixed()\n    .nullable(false)\n    .required(\"Date of Birth is required\"),\n  ipAddress: Yup.string().required(\"IP Address is required\"),\n});\n\nexport function CustomerEditForm({\n  saveCustomer,\n  customer,\n  actionsLoading,\n  onHide,\n}) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={customer}\n        validationSchema={CustomerEditSchema}\n        onSubmit={(values) => {\n          saveCustomer(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\n              {actionsLoading && (\n                <div className=\"overlay-layer bg-transparent\">\n                  <div className=\"spinner spinner-lg spinner-success\" />\n                </div>\n              )}\n              <Form className=\"form form-label-right\">\n                <div className=\"form-group row\">\n                  {/* First Name */}\n                  <div className=\"col-lg-4\">\n                    <Field\n                      name=\"firstName\"\n                      component={Input}\n                      placeholder=\"First Name\"\n                      label=\"First Name\"\n                    />\n                  </div>\n                  {/* Last Name */}\n                  <div className=\"col-lg-4\">\n                    <Field\n                      name=\"lastName\"\n                      component={Input}\n                      placeholder=\"Last Name\"\n                      label=\"Last Name\"\n                    />\n                  </div>\n                  {/* Login */}\n                  <div className=\"col-lg-4\">\n                    <Field\n                      name=\"userName\"\n                      component={Input}\n                      placeholder=\"Login\"\n                      label=\"Login\"\n                    />\n                  </div>\n                </div>\n                {/* Email */}\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-4\">\n                    <Field\n                      type=\"email\"\n                      name=\"email\"\n                      component={Input}\n                      placeholder=\"Email\"\n                      label=\"Email\"\n                    />\n                  </div>\n                  {/* Date of birth */}\n                  <div className=\"col-lg-4\">\n                    <DatePickerField\n                      name=\"dateOfBbirth\"\n                      label=\"Date of Birth\"\n                    />\n                  </div>\n                  {/* IP Address */}\n                  <div className=\"col-lg-4\">\n                    <Field\n                      name=\"ipAddress\"\n                      component={Input}\n                      placeholder=\"IP Address\"\n                      label=\"IP Address\"\n                      customFeedbackLabel=\"We'll never share customer IP Address with anyone else\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  {/* Gender */}\n                  <div className=\"col-lg-4\">\n                    <Select name=\"Gender\" label=\"Gender\">\n                      <option value=\"Female\">Female</option>\n                      <option value=\"Male\">Male</option>\n                    </Select>\n                  </div>\n                  {/* Type */}\n                  <div className=\"col-lg-4\">\n                    <Select name=\"type\" label=\"Type\">\n                      <option value=\"0\">Business</option>\n                      <option value=\"1\">Individual</option>\n                    </Select>\n                  </div>\n                </div>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                type=\"button\"\n                onClick={onHide}\n                className=\"btn btn-light btn-elevate\"\n              >\n                Cancel\n              </button>\n              <> </>\n              <button\n                type=\"submit\"\n                onClick={() => handleSubmit()}\n                className=\"btn btn-primary btn-elevate\"\n              >\n                Save\n              </button>\n            </Modal.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n","export const CustomerStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\nexport const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"\"];\nexport const CustomerTypeCssClasses = [\"success\", \"primary\", \"\"];\nexport const CustomerTypeTitles = [\"Business\", \"Individual\", \"\"];\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\nexport const sizePerPageList = [\n  { text: \"3\", value: 3 },\n  { text: \"5\", value: 5 },\n  { text: \"10\", value: 10 }\n];\nexport const initialFilter = {\n  filter: {\n    lastName: \"\",\n    firstName: \"\",\n    email: \"\",\n    ipAddress: \"\"\n  },\n  sortOrder: \"asc\", // asc||desc\n  sortField: \"id\",\n  pageNumber: 1,\n  pageSize: 10\n};\n","import React, {createContext, useContext, useState, useCallback} from \"react\";\nimport {isEqual, isFunction} from \"lodash\";\nimport {initialFilter} from \"./CustomersUIHelpers\";\n\nconst CustomersUIContext = createContext();\n\nexport function useCustomersUIContext() {\n  return useContext(CustomersUIContext);\n}\n\nexport const CustomersUIConsumer = CustomersUIContext.Consumer;\n\nexport function CustomersUIProvider({customersUIEvents, children}) {\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback(nextQueryParams => {\n    setQueryParamsBase(prevQueryParams => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n\n  const initCustomer = {\n    id: undefined,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    userName: \"\",\n    gender: \"Female\",\n    status: 0,\n    dateOfBbirth: \"\",\n    ipAddress: \"\",\n    type: 1\n  };\n\n  const value = {\n    queryParams,\n    setQueryParamsBase,\n    ids,\n    setIds,\n    setQueryParams,\n    initCustomer,\n    newCustomerButtonClick: customersUIEvents.newCustomerButtonClick,\n    openEditCustomerDialog: customersUIEvents.openEditCustomerDialog,\n    openDeleteCustomerDialog: customersUIEvents.openDeleteCustomerDialog,\n    openDeleteCustomersDialog: customersUIEvents.openDeleteCustomersDialog,\n    openFetchCustomersDialog: customersUIEvents.openFetchCustomersDialog,\n    openUpdateCustomersStatusDialog: customersUIEvents.openUpdateCustomersStatusDialog\n  };\n\n  return <CustomersUIContext.Provider value={value}>{children}</CustomersUIContext.Provider>;\n}","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { CustomerEditDialogHeader } from \"./CustomerEditDialogHeader\";\nimport { CustomerEditForm } from \"./CustomerEditForm\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nexport function CustomerEditDialog({ id, show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      initCustomer: customersUIContext.initCustomer,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  const { actionsLoading, customerForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.customers.actionsLoading,\n      customerForEdit: state.customers.customerForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // server call for getting Customer by id\n    dispatch(actions.fetchCustomer(id));\n  }, [id, dispatch]);\n\n  // server request for saving customer\n  const saveCustomer = (customer) => {\n    if (!id) {\n      // server request for creating customer\n      dispatch(actions.createCustomer(customer)).then(() => onHide());\n    } else {\n      // server request for updating customer\n      dispatch(actions.updateCustomer(customer)).then(() => onHide());\n    }\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <CustomerEditDialogHeader id={id} />\n      <CustomerEditForm\n        saveCustomer={saveCustomer}\n        actionsLoading={actionsLoading}\n        customer={customerForEdit || customersUIProps.initCustomer}\n        onHide={onHide}\n      />\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport {useCustomersUIContext} from \"../CustomersUIContext\";\n\nexport function CustomerDeleteDialog({ id, show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.customers.actionsLoading }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!id) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteCustomer = () => {\n    // server request for deleting customer by id\n    dispatch(actions.deleteCustomer(id)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams));\n      // clear selections list\n      customersUIProps.setIds([]);\n      // closing delete modal\n      onHide();\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {/*begin::Loading*/}\n      {isLoading && <ModalProgressBar />}\n      {/*end::Loading*/}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Customer Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete this customer?</span>\n        )}\n        {isLoading && <span>Customer is deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteCustomer}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function CustomersDeleteDialog({ show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.customers.actionsLoading }),\n    shallowEqual\n  );\n\n  // if customers weren't selected we should close modal\n  useEffect(() => {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.ids]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteCustomers = () => {\n    // server request for deleting customer by selected ids\n    dispatch(actions.deleteCustomers(customersUIProps.ids)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\n        () => {\n          // clear selections list\n          customersUIProps.setIds([]);\n          // closing delete modal\n          onHide();\n        }\n      );\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {/*begin::Loading*/}\n      {isLoading && <ModalProgressBar />}\n      {/*end::Loading*/}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Customers Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete selected customers?</span>\n        )}\n        {isLoading && <span>Customer are deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteCustomers}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport {\n  CustomerStatusCssClasses,\n  CustomerStatusTitles,\n} from \"../CustomersUIHelpers\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nconst selectedCustomers = (entities, ids) => {\n  const _customers = [];\n  ids.forEach((id) => {\n    const customer = entities.find((el) => el.id === id);\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersFetchDialog({ show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const { customers } = useSelector(\n    (state) => ({\n      customers: selectedCustomers(\n        state.customers.entities,\n        customersUIProps.ids\n      ),\n    }),\n    shallowEqual\n  );\n\n  // if customers weren't selected we should close modal\n  useEffect(() => {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.ids]);\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Fetch selected elements\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>STATUS</th>\n              <th>CUSTOMER</th>\n            </tr>\n          </thead>\n          <tbody>\n            {customers.map((customer) => (\n              <tr key={`id${customer.id}`}>\n                <td>{customer.id}</td>\n                <td>\n                  <span\n                    className={`label label-lg label-light-${\n                      CustomerStatusCssClasses[customer.status]\n                    } label-inline`}\n                  >\n                    {\" \"}\n                    {CustomerStatusTitles[customer.status]}\n                  </span>\n                </td>\n                <td>\n                  <span className=\"ml-3\">\n                    {customer.lastName}, {customer.firstName}\n                  </span>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Ok\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport {\n  CustomerStatusCssClasses,\n  CustomerStatusTitles,\n} from \"../CustomersUIHelpers\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nconst selectedCustomers = (entities, ids) => {\n  const _customers = [];\n  ids.forEach((id) => {\n    const customer = entities.find((el) => el.id === id);\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersUpdateStateDialog({ show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const { customers, isLoading } = useSelector(\n    (state) => ({\n      customers: selectedCustomers(\n        state.customers.entities,\n        customersUIProps.ids\n      ),\n      isLoading: state.customers.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.ids]);\n\n  const [status, setStatus] = useState(0);\n\n  const dispatch = useDispatch();\n  const updateStatus = () => {\n    // server request for update customers status by selected ids\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\n      () => {\n        // refresh list after deletion\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\n          () => {\n            // clear selections list\n            customersUIProps.setIds([]);\n            // closing delete modal\n            onHide();\n          }\n        );\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Status has been updated for selected customers\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\n        {/*begin::Loading*/}\n        {isLoading && (\n          <div className=\"overlay-layer\">\n            <div className=\"spinner spinner-lg spinner-primary\" />\n          </div>\n        )}\n        {/*end::Loading*/}\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>STATUS</th>\n              <th>CUSTOMER</th>\n            </tr>\n          </thead>\n          <tbody>\n            {customers.map((customer) => (\n              <tr key={`id${customer.id}`}>\n                <td>{customer.id}</td>\n                <td>\n                  <span\n                    className={`label label-lg label-light-${\n                      CustomerStatusCssClasses[customer.status]\n                    } label-inline`}\n                  >\n                    {\" \"}\n                    {CustomerStatusTitles[customer.status]}\n                  </span>\n                </td>\n                <td>\n                  <span className=\"ml-3\">\n                    {customer.lastName}, {customer.firstName}\n                  </span>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Modal.Body>\n      <Modal.Footer className=\"form\">\n        <div className=\"form-group\">\n          <select\n            className=\"form-control\"\n            value={status}\n            onChange={(e) => setStatus(+e.target.value)}\n          >\n            <option value=\"0\">Suspended</option>\n            <option value=\"1\">Active</option>\n            <option value=\"2\">Pending</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate mr-3\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            onClick={updateStatus}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Update Status\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { status, type, searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  // Filter by status\n  filter.status = status !== \"\" ? +status : undefined;\n  // Filter by type\n  filter.type = type !== \"\" ? +type : undefined;\n  // Filter by all fields\n  filter.lastName = searchText;\n  if (searchText) {\n    filter.firstName = searchText;\n    filter.email = searchText;\n    filter.ipAddress = searchText;\n  }\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function CustomersFilter({ listLoading }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      queryParams: customersUIContext.queryParams,\n      setQueryParams: customersUIContext.setQueryParams,\n    };\n  }, [customersUIContext]);\n\n  // queryParams, setQueryParams,\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(customersUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, customersUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      // update list by queryParams\n      customersUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          status: \"\", // values => All=\"\"/Susspended=0/Active=1/Pending=2\n          type: \"\", // values => All=\"\"/Business=0/Individual=1\n          searchText: \"\",\n        }}\n        onSubmit={(values) => {\n          applyFilter(values);\n        }}\n      >\n        {({\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\n            <div className=\"form-group row\">\n              <div className=\"col-lg-2\">\n                <select\n                  className=\"form-control\"\n                  name=\"status\"\n                  placeholder=\"Filter by Status\"\n                  // TODO: Change this code\n                  onChange={(e) => {\n                    setFieldValue(\"status\", e.target.value);\n                    handleSubmit();\n                  }}\n                  onBlur={handleBlur}\n                  value={values.status}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"0\">Susspended</option>\n                  <option value=\"1\">Active</option>\n                  <option value=\"2\">Pending</option>\n                </select>\n                <small className=\"form-text text-muted\">\n                  <b>Filter</b> by Status\n                </small>\n              </div>\n              <div className=\"col-lg-2\">\n                <select\n                  className=\"form-control\"\n                  placeholder=\"Filter by Type\"\n                  name=\"type\"\n                  onBlur={handleBlur}\n                  onChange={(e) => {\n                    setFieldValue(\"type\", e.target.value);\n                    handleSubmit();\n                  }}\n                  value={values.type}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"0\">Business</option>\n                  <option value=\"1\">Individual</option>\n                </select>\n                <small className=\"form-text text-muted\">\n                  <b>Filter</b> by Type\n                </small>\n              </div>\n              <div className=\"col-lg-2\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"searchText\"\n                  placeholder=\"Search\"\n                  onBlur={handleBlur}\n                  value={values.searchText}\n                  onChange={(e) => {\n                    setFieldValue(\"searchText\", e.target.value);\n                    handleSubmit();\n                  }}\n                />\n                <small className=\"form-text text-muted\">\n                  <b>Search</b> in all fields\n                </small>\n              </div>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\nimport React from \"react\";\nimport {\n  CustomerStatusCssClasses,\n  CustomerStatusTitles,\n} from \"../../CustomersUIHelpers\";\n\nexport function StatusColumnFormatter(cellContent, row) {\n  const getLabelCssClasses = () => {\n    return `label label-lg label-light-${\n      CustomerStatusCssClasses[row.status]\n    } label-inline`;\n  };\n  return (\n    <span className={getLabelCssClasses()}>\n      {CustomerStatusTitles[row.status]}\n    </span>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\nimport React from \"react\";\nimport {\n  CustomerTypeCssClasses,\n  CustomerTypeTitles,\n} from \"../../CustomersUIHelpers\";\n\nexport function TypeColumnFormatter(cellContent, row) {\n  return (\n    <>\n      <span\n        className={`label label-dot label-${\n          CustomerTypeCssClasses[row.type]\n        } mr-2`}\n      ></span>\n      &nbsp;\n      <span className={`font-bold font-${CustomerTypeCssClasses[row.type]}`}>\n        {CustomerTypeTitles[row.type]}\n      </span>\n    </>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\n\nexport function ActionsColumnFormatter(\n  cellContent,\n  row,\n  rowIndex,\n  { openEditCustomerDialog, openDeleteCustomerDialog }\n) {\n  return (\n    <>\n      <a\n        title=\"Edit customer\"\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n        onClick={() => openEditCustomerDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\n          />\n        </span>\n      </a>\n      <> </>\n\n      <a\n        title=\"Delete customer\"\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n        onClick={() => openDeleteCustomerDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\n        </span>\n      </a>\n    </>\n  );\n}\n","// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n  headerSortingClasses,\n} from \"../../../../../../_metronic/_helpers\";\nimport * as uiHelpers from \"../CustomersUIHelpers\";\nimport * as columnFormatters from \"./column-formatters\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nexport function CustomersTable() {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams,\n      setQueryParams: customersUIContext.setQueryParams,\n      openEditCustomerDialog: customersUIContext.openEditCustomerDialog,\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog,\n    };\n  }, [customersUIContext]);\n\n  // Getting curret state of customers list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.customers }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // clear selections list\n    customersUIProps.setIds([]);\n    // server call by queryParams\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.queryParams, dispatch]);\n  // Table columns\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"ID\",\n      sort: true,\n      sortCaret: sortCaret,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"firstName\",\n      text: \"Firstname\",\n      sort: true,\n      sortCaret: sortCaret,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"lastName\",\n      text: \"Lastname\",\n      sort: true,\n      sortCaret: sortCaret,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true,\n      sortCaret: sortCaret,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"gender\",\n      text: \"Gender\",\n      sort: false,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.StatusColumnFormatter,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"type\",\n      text: \"Type\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.TypeColumnFormatter,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: columnFormatters.ActionsColumnFormatter,\n      formatExtraData: {\n        openEditCustomerDialog: customersUIProps.openEditCustomerDialog,\n        openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n  // Table pagination properties\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: customersUIProps.queryParams.pageSize,\n    page: customersUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                bordered={false}\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  customersUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: customersUIProps.ids,\n                  setIds: customersUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nexport function CustomersGrouping() {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      openDeleteCustomersDialog: customersUIContext.openDeleteCustomersDialog,\n      openFetchCustomersDialog: customersUIContext.openFetchCustomersDialog,\n      openUpdateCustomersStatusDialog:\n        customersUIContext.openUpdateCustomersStatusDialog,\n    };\n  }, [customersUIContext]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n        <div className=\"col-xl-12\">\n          <div className=\"form-group form-group-inline\">\n            <div className=\"form-label form-label-no-wrap\">\n              <label className=\"font-bold font-danger\">\n                <span>\n                  Selected records count: <b>{customersUIProps.ids.length}</b>\n                </span>\n              </label>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\n                onClick={customersUIProps.openDeleteCustomersDialog}\n              >\n                <i className=\"fa fa-trash\"></i> Delete All\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={customersUIProps.openFetchCustomersDialog}\n              >\n                <i className=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={customersUIProps.openUpdateCustomersStatusDialog}\n              >\n                <i className=\"fa fa-sync-alt\"></i> Update Status\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardHeaderToolbar,\n} from \"../../../../../_metronic/_partials/controls\";\nimport { CustomersFilter } from \"./customers-filter/CustomersFilter\";\nimport { CustomersTable } from \"./customers-table/CustomersTable\";\nimport { CustomersGrouping } from \"./customers-grouping/CustomersGrouping\";\nimport { useCustomersUIContext } from \"./CustomersUIContext\";\n\nexport function CustomersCard() {\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      newCustomerButtonClick: customersUIContext.newCustomerButtonClick,\n    };\n  }, [customersUIContext]);\n\n  return (\n    <Card>\n      <CardHeader title=\"Customers list\">\n        <CardHeaderToolbar>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={customersUIProps.newCustomerButtonClick}\n          >\n            New Customer\n          </button>\n        </CardHeaderToolbar>\n      </CardHeader>\n      <CardBody>\n        <CustomersFilter />\n        {customersUIProps.ids.length > 0 && <CustomersGrouping />}\n        <CustomersTable />\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { CustomersLoadingDialog } from \"./customers-loading-dialog/CustomersLoadingDialog\";\nimport { CustomerEditDialog } from \"./customer-edit-dialog/CustomerEditDialog\";\nimport { CustomerDeleteDialog } from \"./customer-delete-dialog/CustomerDeleteDialog\";\nimport { CustomersDeleteDialog } from \"./customers-delete-dialog/CustomersDeleteDialog\";\nimport { CustomersFetchDialog } from \"./customers-fetch-dialog/CustomersFetchDialog\";\nimport { CustomersUpdateStateDialog } from \"./customers-update-status-dialog/CustomersUpdateStateDialog\";\nimport { CustomersUIProvider } from \"./CustomersUIContext\";\nimport { CustomersCard } from \"./CustomersCard\";\n\nexport function CustomersPage({ history }) {\n  const customersUIEvents = {\n    newCustomerButtonClick: () => {\n      history.push(\"/e-commerce/customers/new\");\n    },\n    openEditCustomerDialog: (id) => {\n      history.push(`/e-commerce/customers/${id}/edit`);\n    },\n    openDeleteCustomerDialog: (id) => {\n      history.push(`/e-commerce/customers/${id}/delete`);\n    },\n    openDeleteCustomersDialog: () => {\n      history.push(`/e-commerce/customers/deleteCustomers`);\n    },\n    openFetchCustomersDialog: () => {\n      history.push(`/e-commerce/customers/fetch`);\n    },\n    openUpdateCustomersStatusDialog: () => {\n      history.push(\"/e-commerce/customers/updateStatus\");\n    }\n  }\n\n  return (\n    <CustomersUIProvider customersUIEvents={customersUIEvents}>\n      <CustomersLoadingDialog />\n      <Route path=\"/e-commerce/customers/new\">\n        {({ history, match }) => (\n          <CustomerEditDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/:id/edit\">\n        {({ history, match }) => (\n          <CustomerEditDialog\n            show={match != null}\n            id={match && match.params.id}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/deleteCustomers\">\n        {({ history, match }) => (\n          <CustomersDeleteDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/:id/delete\">\n        {({ history, match }) => (\n          <CustomerDeleteDialog\n            show={match != null}\n            id={match && match.params.id}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/fetch\">\n        {({ history, match }) => (\n          <CustomersFetchDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/updateStatus\">\n        {({ history, match }) => (\n          <CustomersUpdateStateDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <CustomersCard />\n    </CustomersUIProvider>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function ProductsLoadingDialog() {\n  const { isLoading } = useSelector(\n    state => ({ isLoading: state.products.listLoading }),\n    shallowEqual\n  );\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n","import * as requestFromServer from \"./productsCrud\";\nimport {productsSlice, callTypes} from \"./productsSlice\";\n\nconst {actions} = productsSlice;\n\nexport const fetchProducts = queryParams => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.list }));\n  return requestFromServer\n    .findProducts(queryParams)\n    .then(response => {\n      const { totalCount, entities } = response.data;\n      dispatch(actions.productsFetched({ totalCount, entities }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find products\";\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\n    });\n};\n\nexport const fetchProduct = id => dispatch => {\n  if (!id) {\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\n  }\n\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .getProductById(id)\n    .then(response => {\n      const product = response.data;\n      dispatch(actions.productFetched({ productForEdit: product }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find product\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteProduct = id => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteProduct(id)\n    .then(response => {\n      dispatch(actions.productDeleted({ id }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete product\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const createProduct = productForCreation => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .createProduct(productForCreation)\n    .then(response => {\n      const { product } = response.data;\n      dispatch(actions.productCreated({ product }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't create product\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateProduct = product => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateProduct(product)\n    .then(() => {\n      dispatch(actions.productUpdated({ product }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update product\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateProductsStatus = (ids, status) => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateStatusForProducts(ids, status)\n    .then(() => {\n      dispatch(actions.productsStatusUpdated({ ids, status }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update products status\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteProducts = ids => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteProducts(ids)\n    .then(() => {\n      dispatch(actions.productsDeleted({ ids }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete products\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n","import axios from \"axios\";\n\nexport const PRODUCTS_URL = \"api/products\";\n\n// CREATE =>  POST: add a new product to the server\nexport function createProduct(product) {\n  return axios.post(PRODUCTS_URL, { product });\n}\n\n// READ\nexport function getAllProducts() {\n  return axios.get(PRODUCTS_URL);\n}\n\nexport function getProductById(productId) {\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\n}\n\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\n// items => filtered/sorted result\nexport function findProducts(queryParams) {\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\n}\n\n// UPDATE => PUT: update the procuct on the server\nexport function updateProduct(product) {\n  return axios.put(`${PRODUCTS_URL}/${product.id}`, { product });\n}\n\n// UPDATE Status\nexport function updateStatusForProducts(ids, status) {\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\n    ids,\n    status\n  });\n}\n\n// DELETE => delete the product from the server\nexport function deleteProduct(productId) {\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\n}\n\n// DELETE Products by ids\nexport function deleteProducts(ids) {\n  return axios.post(`${PRODUCTS_URL}/deleteProducts`, { ids });\n}\n","export const ProductStatusCssClasses = [\"success\", \"info\", \"\"];\nexport const ProductStatusTitles = [\"Selling\", \"Sold\"];\nexport const ProductConditionCssClasses = [\"success\", \"danger\", \"\"];\nexport const ProductConditionTitles = [\"New\", \"Used\"];\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\nexport const sizePerPageList = [\n  { text: \"3\", value: 3 },\n  { text: \"5\", value: 5 },\n  { text: \"10\", value: 10 }\n];\nexport const initialFilter = {\n  filter: {\n    model: \"\",\n    manufacture: \"\",\n    VINCode: \"\"\n  },\n  sortOrder: \"asc\", // asc||desc\n  sortField: \"VINCode\",\n  pageNumber: 1,\n  pageSize: 10\n};\nexport const AVAILABLE_COLORS = [\n  \"Red\",\n  \"CadetBlue\",\n  \"Eagle\",\n  \"Gold\",\n  \"LightSlateGrey\",\n  \"RoyalBlue\",\n  \"Crimson\",\n  \"Blue\",\n  \"Sienna\",\n  \"Indigo\",\n  \"Green\",\n  \"Violet\",\n  \"GoldenRod\",\n  \"OrangeRed\",\n  \"Khaki\",\n  \"Teal\",\n  \"Purple\",\n  \"Orange\",\n  \"Pink\",\n  \"Black\",\n  \"DarkTurquoise\"\n];\n\nexport const AVAILABLE_MANUFACTURES = [\n  \"Pontiac\",\n  \"Kia\",\n  \"Lotus\",\n  \"Subaru\",\n  \"Jeep\",\n  \"Isuzu\",\n  \"Mitsubishi\",\n  \"Oldsmobile\",\n  \"Chevrolet\",\n  \"Chrysler\",\n  \"Audi\",\n  \"Suzuki\",\n  \"GMC\",\n  \"Cadillac\",\n  \"Infinity\",\n  \"Mercury\",\n  \"Dodge\",\n  \"Ram\",\n  \"Lexus\",\n  \"Lamborghini\",\n  \"Honda\",\n  \"Nissan\",\n  \"Ford\",\n  \"Hyundai\",\n  \"Saab\",\n  \"Toyota\"\n];\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\nimport { isEqual, isFunction } from \"lodash\";\nimport { initialFilter } from \"./ProductsUIHelpers\";\n\nconst ProductsUIContext = createContext();\n\nexport function useProductsUIContext() {\n  return useContext(ProductsUIContext);\n}\n\nexport const ProductsUIConsumer = ProductsUIContext.Consumer;\n\nexport function ProductsUIProvider({ productsUIEvents, children }) {\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback((nextQueryParams) => {\n    setQueryParamsBase((prevQueryParams) => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n\n  const value = {\n    queryParams,\n    setQueryParamsBase,\n    ids,\n    setIds,\n    setQueryParams,\n    newProductButtonClick: productsUIEvents.newProductButtonClick,\n    openEditProductPage: productsUIEvents.openEditProductPage,\n    openDeleteProductDialog: productsUIEvents.openDeleteProductDialog,\n    openDeleteProductsDialog: productsUIEvents.openDeleteProductsDialog,\n    openFetchProductsDialog: productsUIEvents.openFetchProductsDialog,\n    openUpdateProductsStatusDialog:\n      productsUIEvents.openUpdateProductsStatusDialog,\n  };\n\n  return (\n    <ProductsUIContext.Provider value={value}>\n      {children}\n    </ProductsUIContext.Provider>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nexport function ProductDeleteDialog({ id, show, onHide }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  // Products Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.products.actionsLoading }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!id) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteProduct = () => {\n    // server request for deleting product by id\n    dispatch(actions.deleteProduct(id)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchProducts(productsUIProps.queryParams));\n      // clear selections list\n      productsUIProps.setIds([]);\n      // closing delete modal\n      onHide();\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Product Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete this product?</span>\n        )}\n        {isLoading && <span>Product is deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteProduct}\n            className=\"btn btn-delete btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nexport function ProductsDeleteDialog({ show, onHide }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  // Products Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.products.actionsLoading }),\n    shallowEqual\n  );\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  // if there weren't selected products we should close modal\n  useEffect(() => {\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.ids]);\n\n  const deleteProducts = () => {\n    // server request for deleting product by seleted ids\n    dispatch(actions.deleteProducts(productsUIProps.ids)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\n        // clear selections list\n        productsUIProps.setIds([]);\n        // closing delete modal\n        onHide();\n      });\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Products Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete selected products?</span>\n        )}\n        {isLoading && <span>Products are deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteProducts}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nconst selectedProducts = (entities, ids) => {\n  const _products = [];\n  ids.forEach((id) => {\n    const product = entities.find((el) => el.id === id);\n    if (product) {\n      _products.push(product);\n    }\n  });\n  return _products;\n};\n\nexport function ProductsFetchDialog({ show, onHide }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  // Products Redux state\n  const { products } = useSelector(\n    (state) => ({\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\n    }),\n    shallowEqual\n  );\n\n  // if there weren't selected ids we should close modal\n  useEffect(() => {\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.ids]);\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Fetch selected elements\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\n          <div className=\"list-timeline-items\">\n            {products.map((product) => (\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\n                <span className=\"list-timeline-text\">\n                  <span\n                    className={`label label-lg label-light-${\n                      ProductStatusCssClasses[product.status]\n                    } label-inline`}\n                    style={{ width: \"60px\" }}\n                  >\n                    ID: {product.id}\n                  </span>{\" \"}\n                  <span className=\"ml-5\">\n                    {product.manufacture}, {product.model}\n                  </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Ok\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nconst selectedProducts = (entities, ids) => {\n  const _products = [];\n  ids.forEach((id) => {\n    const product = entities.find((el) => el.id === id);\n    if (product) {\n      _products.push(product);\n    }\n  });\n  return _products;\n};\n\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  // Products Redux state\n  const { products, isLoading } = useSelector(\n    (state) => ({\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\n      isLoading: state.products.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  // if there weren't selected products we should close modal\n  useEffect(() => {\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.ids]);\n\n  const [status, setStatus] = useState(0);\n\n  const dispatch = useDispatch();\n  const updateStatus = () => {\n    // server request for updateing product by ids\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\n      () => {\n        // refresh list after deletion\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\n          () => {\n            // clear selections list\n            productsUIProps.setIds([]);\n            // closing delete modal\n            onHide();\n          }\n        );\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Status has been updated for selected products\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\n        {isLoading && (\n          <div className=\"overlay-layer bg-transparent\">\n            <div className=\"spinner spinner-lg spinner-warning\" />\n          </div>\n        )}\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\n          <div className=\"list-timeline-items\">\n            {products.map((product) => (\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\n                <span className=\"list-timeline-text\">\n                  <span\n                    className={`label label-lg label-light-${\n                      ProductStatusCssClasses[product.status]\n                    } label-inline`}\n                    style={{ width: \"60px\" }}\n                  >\n                    ID: {product.id}\n                  </span>{\" \"}\n                  <span className=\"ml-5\">\n                    {product.manufacture}, {product.model}\n                  </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className=\"form\">\n        <div className=\"form-group\">\n          <select\n            className={`form-control ${ProductStatusCssClasses[status]}`}\n            value={status}\n            onChange={(e) => setStatus(+e.target.value)}\n          >\n            <option value=\"0\">Selling</option>\n            <option value=\"1\">Sold</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={updateStatus}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Update Status\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { status, condition, searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  // Filter by status\n  filter.status = status !== \"\" ? +status : undefined;\n  // Filter by condition\n  filter.condition = condition !== \"\" ? +condition : undefined;\n  // Filter by all fields\n  filter.model = searchText;\n  if (searchText) {\n    filter.manufacture = searchText;\n    filter.VINCode = searchText;\n  }\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function ProductsFilter({ listLoading }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      setQueryParams: productsUIContext.setQueryParams,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      productsUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\n          condition: \"\", // values => All=\"\"/New=0/Used=1\n          searchText: \"\",\n        }}\n        onSubmit={(values) => {\n          applyFilter(values);\n        }}\n      >\n        {({\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\n            <div className=\"form-group row\">\n              <div className=\"col-lg-2\">\n                <select\n                  className=\"form-control\"\n                  name=\"status\"\n                  placeholder=\"Filter by Status\"\n                  onChange={(e) => {\n                    setFieldValue(\"status\", e.target.value);\n                    handleSubmit();\n                  }}\n                  onBlur={handleBlur}\n                  value={values.status}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"0\">Selling</option>\n                  <option value=\"1\">Sold</option>\n                </select>\n                <small className=\"form-text text-muted\">\n                  <b>Filter</b> by Status\n                </small>\n              </div>\n              <div className=\"col-lg-2\">\n                <select\n                  className=\"form-control\"\n                  placeholder=\"Filter by Type\"\n                  name=\"condition\"\n                  onBlur={handleBlur}\n                  onChange={(e) => {\n                    setFieldValue(\"condition\", e.target.value);\n                    handleSubmit();\n                  }}\n                  value={values.condition}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"0\">New</option>\n                  <option value=\"1\">Used</option>\n                </select>\n                <small className=\"form-text text-muted\">\n                  <b>Filter</b> by Condition\n                </small>\n              </div>\n              <div className=\"col-lg-2\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"searchText\"\n                  placeholder=\"Search\"\n                  onBlur={handleBlur}\n                  value={values.searchText}\n                  onChange={(e) => {\n                    setFieldValue(\"searchText\", e.target.value);\n                    handleSubmit();\n                  }}\n                />\n                <small className=\"form-text text-muted\">\n                  <b>Search</b> in all fields\n                </small>\n              </div>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  ProductStatusCssClasses,\n  ProductStatusTitles\n} from \"../../ProductsUIHelpers\";\n\nexport const StatusColumnFormatter = (cellContent, row) => (\n  <span\n    className={`label label-lg label-light-${\n      ProductStatusCssClasses[row.status]\n    } label-inline`}\n  >\n    {ProductStatusTitles[row.status]}\n  </span>\n);\n","import React from \"react\";\nimport {\n  ProductConditionCssClasses,\n  ProductConditionTitles\n} from \"../../ProductsUIHelpers\";\n\nexport const ConditionColumnFormatter = (cellContent, row) => (\n  <>\n    <span\n      className={`badge badge-${\n        ProductConditionCssClasses[row.condition]\n      } badge-dot`}\n    ></span>\n    &nbsp;\n    <span\n      className={`font-bold font-${\n        ProductConditionCssClasses[row.condition]\n      }`}\n    >\n      {ProductConditionTitles[row.condition]}\n    </span>\n  </>\n);\n","import React from \"react\";\n\nexport const ColorColumnFormatter = (cellContent, row) => (\n  <span style={{ color: row.color }}>{row.color}</span>\n);\n","import React from \"react\";\n\nexport const PriceColumnFormatter = (cellContent, row) => <>${row.price}</>;\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\n\nexport const ActionsColumnFormatter = (\n  cellContent,\n  row,\n  rowIndex,\n  { openEditProductPage, openDeleteProductDialog }\n) => (\n  <>\n    <OverlayTrigger\n      overlay={<Tooltip id=\"products-edit-tooltip\">Edit product</Tooltip>}\n    >\n      <a\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n        onClick={() => openEditProductPage(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\n          />\n        </span>\n      </a>\n    </OverlayTrigger>\n\n    <> </>\n    <OverlayTrigger\n      overlay={<Tooltip id=\"products-delete-tooltip\">Delete product</Tooltip>}\n    >\n      <a\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n        onClick={() => openDeleteProductDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\n        </span>\n      </a>\n    </OverlayTrigger>\n  </>\n);\n","// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport * as uiHelpers from \"../ProductsUIHelpers\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n} from \"../../../../../../_metronic/_helpers\";\nimport * as columnFormatters from \"./column-formatters\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nexport function ProductsTable() {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\n    };\n  }, [productsUIContext]);\n\n  // Getting curret state of products list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.products }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n  // Products Redux state\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // clear selections list\n    productsUIProps.setIds([]);\n    // server call by queryParams\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.queryParams, dispatch]);\n  // Table columns\n  const columns = [\n    {\n      dataField: \"VINCode\",\n      text: \"VIN Code (ID)\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"manufacture\",\n      text: \"Manufacture\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"model\",\n      text: \"Model\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"modelYear\",\n      text: \"Model Year\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"color\",\n      text: \"Color\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.ColorColumnFormatter,\n    },\n    {\n      dataField: \"price\",\n      text: \"Price\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.PriceColumnFormatter,\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.StatusColumnFormatter,\n    },\n    {\n      dataField: \"condition\",\n      text: \"Condition\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.ConditionColumnFormatter,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: columnFormatters.ActionsColumnFormatter,\n      formatExtraData: {\n        openEditProductPage: productsUIProps.openEditProductPage,\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n  // Table pagination properties\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: productsUIProps.queryParams.pageSize,\n    page: productsUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bootstrap4\n                bordered={false}\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  productsUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: productsUIProps.ids,\n                  setIds: productsUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nexport function ProductsGrouping() {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\n      openUpdateProductsStatusDialog:\n        productsUIContext.openUpdateProductsStatusDialog,\n    };\n  }, [productsUIContext]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n        <div className=\"col-xl-12\">\n          <div className=\"form-group form-group-inline\">\n            <div className=\"form-label form-label-no-wrap\">\n              <label className=\"-font-bold font-danger-\">\n                <span>\n                  Selected records count: <b>{productsUIProps.ids.length}</b>\n                </span>\n              </label>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\n                onClick={productsUIProps.openDeleteProductsDialog}\n              >\n                <i className=\"fa fa-trash\"></i> Delete All\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={productsUIProps.openFetchProductsDialog}\n              >\n                <i className=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={productsUIProps.openUpdateProductsStatusDialog}\n              >\n                <i className=\"fa fa-sync-alt\"></i> Update Status\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {useMemo} from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardHeaderToolbar,\n} from \"../../../../../_metronic/_partials/controls\";\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\nimport { ProductsTable } from \"./products-table/ProductsTable\";\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\nimport { useProductsUIContext } from \"./ProductsUIContext\";\n\nexport function ProductsCard() {\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      newProductButtonClick: productsUIContext.newProductButtonClick,\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openUpdateProductsStatusDialog:\n        productsUIContext.openUpdateProductsStatusDialog,\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\n    };\n  }, [productsUIContext]);\n\n  return (\n    <Card>\n      <CardHeader title=\"Products list\">\n        <CardHeaderToolbar>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={productsUIProps.newProductButtonClick}\n          >\n            New Product\n          </button>\n        </CardHeaderToolbar>\n      </CardHeader>\n      <CardBody>\n        <ProductsFilter />\n        {productsUIProps.ids.length > 0 && (\n          <>\n            <ProductsGrouping />\n          </>\n        )}\n        <ProductsTable />\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { ProductsLoadingDialog } from \"./products-loading-dialog/ProductsLoadingDialog\";\nimport { ProductDeleteDialog } from \"./product-delete-dialog/ProductDeleteDialog\";\nimport { ProductsDeleteDialog } from \"./products-delete-dialog/ProductsDeleteDialog\";\nimport { ProductsFetchDialog } from \"./products-fetch-dialog/ProductsFetchDialog\";\nimport { ProductsUpdateStatusDialog } from \"./products-update-status-dialog/ProductsUpdateStatusDialog\";\nimport { ProductsCard } from \"./ProductsCard\";\nimport { ProductsUIProvider } from \"./ProductsUIContext\";\n\nexport function ProductsPage({ history }) {\n  const productsUIEvents = {\n    newProductButtonClick: () => {\n      history.push(\"/e-commerce/products/new\");\n    },\n    openEditProductPage: (id) => {\n      history.push(`/e-commerce/products/${id}/edit`);\n    },\n    openDeleteProductDialog: (id) => {\n      history.push(`/e-commerce/products/${id}/delete`);\n    },\n    openDeleteProductsDialog: () => {\n      history.push(`/e-commerce/products/deleteProducts`);\n    },\n    openFetchProductsDialog: () => {\n      history.push(`/e-commerce/products/fetch`);\n    },\n    openUpdateProductsStatusDialog: () => {\n      history.push(\"/e-commerce/products/updateStatus\");\n    },\n  };\n\n  return (\n    <ProductsUIProvider productsUIEvents={productsUIEvents}>\n      <ProductsLoadingDialog />\n      <Route path=\"/e-commerce/products/deleteProducts\">\n        {({ history, match }) => (\n          <ProductsDeleteDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/products\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/products/:id/delete\">\n        {({ history, match }) => (\n          <ProductDeleteDialog\n            show={match != null}\n            id={match && match.params.id}\n            onHide={() => {\n              history.push(\"/e-commerce/products\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/products/fetch\">\n        {({ history, match }) => (\n          <ProductsFetchDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/products\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/products/updateStatus\">\n        {({ history, match }) => (\n          <ProductsUpdateStatusDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/products\");\n            }}\n          />\n        )}\n      </Route>\n      <ProductsCard />\n    </ProductsUIProvider>\n  );\n}\n","// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\nimport {\n  AVAILABLE_COLORS,\n  AVAILABLE_MANUFACTURES,\n  ProductStatusTitles,\n  ProductConditionTitles,\n} from \"../ProductsUIHelpers\";\n\n// Validation schema\nconst ProductEditSchema = Yup.object().shape({\n  model: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Model is required\"),\n  manufacture: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Manufacture is required\"),\n  modelYear: Yup.number()\n    .min(1950, \"1950 is minimum\")\n    .max(2020, \"2020 is maximum\")\n    .required(\"Model year is required\"),\n  mileage: Yup.number()\n    .min(0, \"0 is minimum\")\n    .max(1000000, \"1000000 is maximum\")\n    .required(\"Mileage is required\"),\n  color: Yup.string().required(\"Color is required\"),\n  price: Yup.number()\n    .min(1, \"$1 is minimum\")\n    .max(1000000, \"$1000000 is maximum\")\n    .required(\"Price is required\"),\n  VINCode: Yup.string().required(\"VINCode is required\"),\n});\n\nexport function ProductEditForm({\n  product,\n  btnRef,\n  saveProduct,\n}) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={product}\n        validationSchema={ProductEditSchema}\n        onSubmit={(values) => {\n          saveProduct(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Form className=\"form form-label-right\">\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    name=\"model\"\n                    component={Input}\n                    placeholder=\"Model\"\n                    label=\"Model\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"manufacture\" label=\"Manufacture\">\n                    {AVAILABLE_MANUFACTURES.map((manufacture) => (\n                      <option key={manufacture} value={manufacture}>\n                        {manufacture}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"modelYear\"\n                    component={Input}\n                    placeholder=\"Model year\"\n                    label=\"Model year\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"mileage\"\n                    component={Input}\n                    placeholder=\"Mileage\"\n                    label=\"Mileage\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"color\" label=\"Color\">\n                    {AVAILABLE_COLORS.map((color) => (\n                      <option key={color} value={color}>\n                        {color}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"price\"\n                    component={Input}\n                    placeholder=\"Price\"\n                    label=\"Price ($)\"\n                    customFeedbackLabel=\"Please enter Price\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    name=\"VINCode\"\n                    component={Input}\n                    placeholder=\"VIN code\"\n                    label=\"VIN code\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"status\" label=\"Status\">\n                    {ProductStatusTitles.map((status, index) => (\n                      <option key={status} value={index}>\n                        {status}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"condition\" label=\"Condition\">\n                    {ProductConditionTitles.map((condition, index) => (\n                      <option key={condition} value={index}>\n                        {condition}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label>Description</label>\n                <Field\n                  name=\"description\"\n                  as=\"textarea\"\n                  className=\"form-control\"\n                />\n              </div>\n              <button\n                type=\"submit\"\n                style={{ display: \"none\" }}\n                ref={btnRef}\n                onSubmit={() => handleSubmit()}\n              ></button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\nexport const sizePerPageList = [\n  { text: \"1\", value: 1 },\n  { text: \"3\", value: 3 },\n  { text: \"5\", value: 5 },\n];\nexport const initialFilter = {\n  filter: {\n    value: \"\",\n  },\n  sortOrder: \"asc\", // asc||desc\n  sortField: \"name\",\n  pageNumber: 1,\n  pageSize: 5,\n};\n\nexport const SPECIFICATIONS_DICTIONARY = [\n  { id: 0, name: \"Seats\" },\n  { id: 1, name: \"Fuel Type\" },\n  { id: 2, name: \"Stock\" },\n  { id: 3, name: \"Door count\" },\n  { id: 4, name: \"Engine\" },\n  { id: 5, name: \"Transmission\" },\n  { id: 6, name: \"Drivetrain\" },\n  { id: 7, name: \"Combined MPG\" },\n  { id: 8, name: \"Warranty\" },\n  { id: 9, name: \"Wheels\" },\n];\n","/* eslint-disable no-unused-vars */\nimport React, {\n  useEffect,\n  useContext,\n  createContext,\n  useState,\n  useCallback,\n} from \"react\";\nimport { isEqual, isFunction } from \"lodash\";\nimport { initialFilter } from \"./SpecificationsUIHelper\";\n\nconst SpecificationsUIContext = createContext();\n\nexport function useSpecificationsUIContext() {\n  return useContext(SpecificationsUIContext);\n}\n\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\n\nexport function SpecificationsUIProvider({ currentProductId, children }) {\n  const [productId, setProductId] = useState(currentProductId);\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback((nextQueryParams) => {\n    setQueryParamsBase((prevQueryParams) => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n  const [selectedId, setSelectedId] = useState(null);\n  const initSpecification = {\n    id: undefined,\n    value: \"\",\n    specId: 0,\n    carId: productId,\n  };\n  useEffect(() => {\n    initSpecification.carId = currentProductId;\n    initSpecification.productId = currentProductId;\n    setProductId(currentProductId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentProductId]);\n  const [\n    showEditSpecificationDialog,\n    setShowEditSpecificationDialog,\n  ] = useState(false);\n  const openNewSpecificationDialog = () => {\n    setSelectedId(undefined);\n    setShowEditSpecificationDialog(true);\n  };\n  const openEditSpecificationDialog = (id) => {\n    setSelectedId(id);\n    setShowEditSpecificationDialog(true);\n  };\n  const closeEditSpecificationDialog = () => {\n    setSelectedId(undefined);\n    setShowEditSpecificationDialog(false);\n  };\n  const [\n    showDeleteSpecificationDialog,\n    setShowDeleteSpecificationDialog,\n  ] = useState(false);\n  const openDeleteSpecificationDialog = (id) => {\n    setSelectedId(id);\n    setShowDeleteSpecificationDialog(true);\n  };\n  const closeDeleteSpecificationDialog = () => {\n    setSelectedId(undefined);\n    setShowDeleteSpecificationDialog(false);\n  };\n  const [\n    showDeleteSpecificationsDialog,\n    setShowDeleteSpecificationsDialog,\n  ] = useState(false);\n  const openDeleteSpecificationsDialog = () => {\n    setShowDeleteSpecificationsDialog(true);\n  };\n  const closeDeleteSpecificationsDialog = () => {\n    setShowDeleteSpecificationsDialog(false);\n  };\n  const [\n    showFetchSpecificationsDialog,\n    setShowFetchSpecificationsDialog,\n  ] = useState(false);\n  const openFetchSpecificationsDialog = () => {\n    setShowFetchSpecificationsDialog(true);\n  };\n  const closeFetchSpecificationsDialog = () => {\n    setShowFetchSpecificationsDialog(false);\n  };\n  const value = {\n    ids,\n    setIds,\n    productId,\n    setProductId,\n    queryParams,\n    setQueryParams,\n    initSpecification,\n    selectedId,\n    showEditSpecificationDialog,\n    openEditSpecificationDialog,\n    openNewSpecificationDialog,\n    closeEditSpecificationDialog,\n    showDeleteSpecificationDialog,\n    openDeleteSpecificationDialog,\n    closeDeleteSpecificationDialog,\n    showDeleteSpecificationsDialog,\n    openDeleteSpecificationsDialog,\n    closeDeleteSpecificationsDialog,\n    showFetchSpecificationsDialog,\n    openFetchSpecificationsDialog,\n    closeFetchSpecificationsDialog,\n  };\n\n  return (\n    <SpecificationsUIContext.Provider value={value}>\n      {children}\n    </SpecificationsUIContext.Provider>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  filter.value = searchText;\n  if (searchText) {\n    filter.name = searchText;\n  }\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function SpecificationsFilter() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      openNewSpecificationDialog: specsUIContext.openNewSpecificationDialog,\n      setQueryParams: specsUIContext.setQueryParams,\n      queryParams: specsUIContext.queryParams,\n    };\n  }, [specsUIContext]);\n\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(specsUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, specsUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      specsUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"form-filtration\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\n            <Formik\n              initialValues={{\n                searchText: \"\",\n              }}\n              onSubmit={(values) => {\n                applyFilter(values);\n              }}\n            >\n              {({\n                values,\n                handleSubmit,\n                handleBlur,\n                handleChange,\n                setFieldValue,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"searchText\"\n                      placeholder=\"Search\"\n                      onBlur={handleBlur}\n                      value={values.searchText}\n                      onChange={(e) => {\n                        setFieldValue(\"searchText\", e.target.value);\n                        handleSubmit();\n                      }}\n                    />\n                    <small className=\"form-text text-muted\">\n                      <b>Search</b> in all fields\n                    </small>\n                  </div>\n                </form>\n              )}\n            </Formik>\n          </div>\n          <div className=\"col-md-7 margin-bottom-10-mobile\"></div>\n          <div className=\"col-md-3 text-right margin-bottom-10-mobile\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => specsUIProps.openNewSpecificationDialog()}\n            >\n              Create new specification\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as requestFromServer from \"./specificationsCrud\";\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\n\nconst {actions} = specificationsSlice;\n\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.list }));\n  if (!productId) {\n    return dispatch(\n      actions.specificationsFetched({ totalCount: 0, entities: null })\n    );\n  }\n\n  return requestFromServer\n    .findSpecifications(queryParams, productId)\n    .then(response => {\n      const { totalCount, entities } = response.data;\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find specifications\";\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\n    });\n};\n\nexport const fetchSpecification = id => dispatch => {\n  if (!id) {\n    return dispatch(\n      actions.specificationFetched({ specificationForEdit: undefined })\n    );\n  }\n\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .getSpecificationById(id)\n    .then(response => {\n      const specification = response.data;\n      dispatch(\n        actions.specificationFetched({ specificationForEdit: specification })\n      );\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find specification\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteSpecification = id => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteSpecification(id)\n    .then(response => {\n      dispatch(actions.specificationDeleted({ id }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete specification\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const createSpecification = specificationForCreation => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .createSpecification(specificationForCreation)\n    .then(response => {\n      const { specification } = response.data;\n      dispatch(actions.specificationCreated({ specification }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't create specification\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateSpecification = specification => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateSpecification(specification)\n    .then(() => {\n      dispatch(actions.specificationUpdated({ specification }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update specification\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteSpecifications = ids => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteSpecifications(ids)\n    .then(() => {\n      dispatch(actions.specificationsDeleted({ ids }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete specifications\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n","import axios from \"axios\";\n\nexport const SPECIFICATIONS_URL = \"api/specifications\";\n\n// CREATE =>  POST: add a new specifications to the server\nexport function createSpecification(specification) {\n  return axios.post(SPECIFICATIONS_URL, { specification });\n}\n\n// READ\n// Server should return filtered specifications by productId\nexport function getAllProductSpecificationsByProductId(productId) {\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\n}\n\nexport function getSpecificationById(specificationId) {\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\n}\n\n// Server should return sorted/filtered specifications and merge with items from state\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\nexport function findSpecifications(queryParams, productId) {\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\n}\n\n// UPDATE => PUT: update the specification\nexport function updateSpecification(specification) {\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\n    specification\n  });\n}\n\n// DELETE => delete the specification\nexport function deleteSpecification(specificationId) {\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\n}\n\n// DELETE specifications by ids\nexport function deleteSpecifications(ids) {\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\n}\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\n\nexport function ActionsColumnFormatter(\n  cellContent,\n  row,\n  rowIndex,\n  { openEditSpecificationDialog, openDeleteSpecificationDialog }\n) {\n  return (\n    <>\n      <OverlayTrigger\n        overlay={<Tooltip id=\"specs-edit-tooltip\">Edit specification</Tooltip>}\n      >\n        <a\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n          onClick={() => openEditSpecificationDialog(row.id)}\n        >\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <SVG\n              src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\n            />\n          </span>\n        </a>\n      </OverlayTrigger>\n\n      <> </>\n      <OverlayTrigger\n        overlay={\n          <Tooltip id=\"spec-delete-tooltip\">Delete specification</Tooltip>\n        }\n      >\n        <a\n          className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n          onClick={() => openDeleteSpecificationDialog(row.id)}\n        >\n          <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n            <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\n          </span>\n        </a>\n      </OverlayTrigger>\n    </>\n  );\n}\n","// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n} from \"../../../../../../_metronic/_helpers\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function SpecificationsTable() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      queryParams: specsUIContext.queryParams,\n      setQueryParams: specsUIContext.setQueryParams,\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\n      openDeleteSpecificationDialog:\n        specsUIContext.openDeleteSpecificationDialog,\n      ids: specsUIContext.ids,\n      setIds: specsUIContext.setIds,\n      productId: specsUIContext.productId,\n    };\n  }, [specsUIContext]);\n\n  // Specs Redux state\n  // Getting curret state of products list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.specifications }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    specsUIProps.setIds([]);\n    dispatch(\n      actions.fetchSpecifications(specsUIProps.queryParams,specsUIProps.productId)\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\n\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Specification Type\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"value\",\n      text: \"Value\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\n        openDeleteSpecificationDialog:\n          specsUIProps.openDeleteSpecificationDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n  // Table pagination properties\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: specsUIProps.queryParams.pageSize,\n    page: specsUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bordered={false}\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  specsUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: specsUIProps.ids,\n                  setIds: specsUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\n\nexport function SpecificationsLoadingDialog() {\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.specifications.listLoading }),\n    shallowEqual\n  );\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function SpecificationsDeleteDialog() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      productId: specsUIContext.productId,\n      ids: specsUIContext.ids,\n      show: specsUIContext.showDeleteSpecificationsDialog,\n      onHide: specsUIContext.closeDeleteSpecificationsDialog,\n      setIds: specsUIContext.setIds,\n      queryParams: specsUIContext.queryParams,\n    };\n  }, [specsUIContext]);\n\n  // Specs Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\n    shallowEqual\n  );\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  // if there weren't selected specs we should close modal\n  useEffect(() => {\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\n      specsUIProps.onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.ids]);\n\n  const deleteSpecifications = () => {\n    // server request for selected deleting specs\n    dispatch(actions.deleteSpecifications(specsUIProps.ids)).then(() => {\n      // refresh list after deletion\n      dispatch(\n        actions.fetchSpecifications(\n          specsUIProps.queryParams,\n          specsUIProps.productId\n        )\n      ).then(() => {\n        specsUIProps.setIds([]);\n        specsUIProps.onHide();\n      });\n    });\n  };\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Specifications Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>\n            Are you sure to permanently delete selected specifications?\n          </span>\n        )}\n        {isLoading && <span>Specifications are deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={specsUIProps.onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteSpecifications}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function SpecificationDeleteDialog() {\n  // Specifications UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      id: specsUIContext.selectedId,\n      productId: specsUIContext.productId,\n      show: specsUIContext.showDeleteSpecificationDialog,\n      onHide: specsUIContext.closeDeleteSpecificationDialog,\n      queryParams: specsUIContext.queryParams,\n      setIds: specsUIContext.setIds,\n    };\n  }, [specsUIContext]);\n\n  // Specs Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!specsUIProps.id) {\n      specsUIProps.onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.id]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteSpecification = () => {\n    // server request for deleting spec by id\n    dispatch(actions.deleteSpecification(specsUIProps.id)).then(() => {\n      // refresh list after deletion\n      dispatch(\n        actions.fetchSpecifications(\n          specsUIProps.queryParams,\n          specsUIProps.productId\n        )\n      );\n      specsUIProps.setIds([]);\n      specsUIProps.onHide();\n    });\n  };\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Specification Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete this specification?</span>\n        )}\n        {isLoading && <span>Specification is deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={specsUIProps.onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteSpecification}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nconst selectedSpecifications = (entities, ids) => {\n  const _specifications = [];\n  ids.forEach((id) => {\n    const specification = entities.find((el) => el.id === id);\n    if (specification) {\n      _specifications.push(specification);\n    }\n  });\n  return _specifications;\n};\n\nexport function SpecificationsFetchDialog() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      ids: specsUIContext.ids,\n      show: specsUIContext.showFetchSpecificationsDialog,\n      onHide: specsUIContext.closeFetchSpecificationsDialog,\n      queryParams: specsUIContext.queryParams,\n    };\n  }, [specsUIContext]);\n\n  // Specs Redux state\n  const { specifications } = useSelector(\n    (state) => ({\n      specifications: selectedSpecifications(\n        state.specifications.entities,\n        specsUIProps.ids\n      ),\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\n      specsUIProps.onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.ids]);\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Fetch selected elements\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\n          <div className=\"list-timeline-items\">\n            {specifications.map((specification) => (\n              <div className=\"list-timeline-item mb-3\" key={specification.id}>\n                <span className=\"list-timeline-text\">\n                  <span\n                    className=\"label label-lg label-light-success label-inline\"\n                    style={{ width: \"60px\" }}\n                  >\n                    ID: {specification.id}\n                  </span>{\" \"}\n                  <span className=\"ml-5\">\n                    {specification.name}: {specification.value}{\" \"}\n                  </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={specsUIProps.onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={specsUIProps.onHide}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Ok\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function SpecificationsGrouping() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      ids: specsUIContext.ids,\n      openDeleteSpecificationsDialog:\n        specsUIContext.openDeleteSpecificationsDialog,\n      openFetchSpecificationsDialog:\n        specsUIContext.openFetchSpecificationsDialog,\n    };\n  }, [specsUIContext]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\n        <div className=\"col-xl-12\">\n          <div className=\"form-group form-group-inline\">\n            <div className=\"form-label form-label-no-wrap\">\n              <label className=\"font-bold font-danger mt-5\">\n                <span>Selected records count: {specsUIProps.ids.length}</span>\n              </label>\n            </div>\n            <div className=\"form-group-inline\">\n              <button\n                type=\"button\"\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\n                onClick={specsUIProps.openDeleteSpecificationsDialog}\n              >\n                <i className=\"fa fa-trash\"></i> Delete All\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={specsUIProps.openFetchSpecificationsDialog}\n              >\n                <i className=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useState, useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\n\nexport function SpecificationEditDialogHeader({ id }) {\n  const [title, setTitle] = useState(\"\");\n  // Specs Redux state\n  const { specificationForEdit, actionsLoading } = useSelector(\n    (state) => ({\n      specificationForEdit: state.specifications.specificationForEdit,\n      actionsLoading: state.specifications.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Specification\";\n    if (specificationForEdit && id) {\n      _title = \"Edit Specification\";\n    }\n\n    setTitle(_title);\n    // eslint-disable-next-line\n  }, [specificationForEdit, actionsLoading]);\n  return (\n    <>\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\n      </Modal.Header>\n    </>\n  );\n}\n","// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Select,\n  Input,\n} from \"../../../../../../../_metronic/_partials/controls\";\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\n\n// Validation schema\nconst SpecificationEditSchema = Yup.object().shape({\n  value: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Value is required\"),\n  specId: Yup.number().required(\"Specification type is required\"),\n});\n\nexport function SpecificationEditForm({\n  saveSpecification,\n  specification,\n  actionsLoading,\n  onHide,\n}) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={specification}\n        validationSchema={SpecificationEditSchema}\n        onSubmit={(values) => {\n          saveSpecification(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\n              {actionsLoading && (\n                <div className=\"overlay-layer bg-transparent\">\n                  <div className=\"spinner spinner-lg spinner-success\" />\n                </div>\n              )}\n              <Form className=\"form form-label-right\">\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Select name=\"specId\" label=\"Specification Type\">\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\n                        <option key={spec.id} value={spec.id}>\n                          {spec.name}\n                        </option>\n                      ))}\n                    </Select>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Field\n                      name=\"value\"\n                      component={Input}\n                      placeholder=\"Value\"\n                      label=\"Value\"\n                    />\n                  </div>\n                </div>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                type=\"button\"\n                onClick={onHide}\n                className=\"btn btn-light btn-elevate\"\n              >\n                Cancel\n              </button>\n              <> </>\n              <button\n                type=\"submit\"\n                onClick={() => handleSubmit()}\n                className=\"btn btn-primary btn-elevate\"\n              >\n                Save\n              </button>\n            </Modal.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\n\nexport function SpecificationEditDialog() {\n  // Specifications UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      id: specsUIContext.selectedId,\n      show: specsUIContext.showEditSpecificationDialog,\n      onHide: specsUIContext.closeEditSpecificationDialog,\n      productId: specsUIContext.productId,\n      queryParams: specsUIContext.queryParams,\n      initSpecification: specsUIContext.initSpecification,\n    };\n  }, [specsUIContext]);\n\n  // Specifications Redux state\n  const dispatch = useDispatch();\n  const { actionsLoading, specificationForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.specifications.actionsLoading,\n      specificationForEdit: state.specifications.specificationForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // server request for getting spec by seleted id\n    dispatch(actions.fetchSpecification(specsUIProps.id));\n  }, [specsUIProps.id, dispatch]);\n\n  const saveSpecification = (specification) => {\n    if (!specsUIProps.id) {\n      dispatch(actions.createSpecification(specification)).then(() => {\n        dispatch(\n          actions.fetchSpecifications(\n            specsUIProps.queryParams,\n            specsUIProps.productId\n          )\n        ).then(() => specsUIProps.onHide());\n      });\n    } else {\n      dispatch(actions.updateSpecification(specification)).then(() => {\n        dispatch(\n          actions.fetchSpecifications(\n            specsUIProps.queryParams,\n            specsUIProps.productId\n          )\n        ).then(() => specsUIProps.onHide());\n      });\n    }\n  };\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\n      <SpecificationEditForm\n        saveSpecification={saveSpecification}\n        actionsLoading={actionsLoading}\n        specification={specificationForEdit || specsUIProps.initSpecification}\n        onHide={specsUIProps.onHide}\n      />\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { SpecificationsFilter } from \"./SpecificationsFilter\";\nimport { SpecificationsTable } from \"./SpecificationsTable\";\nimport { SpecificationsLoadingDialog } from \"./SpecificationsLoadingDialog\";\nimport { SpecificationsDeleteDialog } from \"./SpecificationsDeleteDialog\";\nimport { SpecificationDeleteDialog } from \"./SpecificationDeleteDialog\";\nimport { SpecificationsFetchDialog } from \"./SpecificationsFetchDialog\";\nimport { SpecificationsGrouping } from \"./SpecificationsGrouping\";\nimport { SpecificationEditDialog } from \"./specification-edit-dialog/SpecificationEditDialog\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function Specifications() {\n  // Specifications UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return { ids: specsUIContext.ids };\n  }, [specsUIContext]);\n\n  return (\n    <>\n      <SpecificationsLoadingDialog />\n      <SpecificationEditDialog />\n      <SpecificationDeleteDialog />\n      <SpecificationsDeleteDialog />\n      <SpecificationsFetchDialog />\n      <div className=\"form margin-b-30\">\n        <SpecificationsFilter />\n        {specsUIProps.ids.length > 0 && (\n          <>\n            <SpecificationsGrouping />\n            <br />\n          </>\n        )}\n      </div>\n      <SpecificationsTable />\n    </>\n  );\n}\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\nexport const sizePerPageList = [\n  { text: \"1\", value: 1 },\n  { text: \"3\", value: 3 },\n  { text: \"5\", value: 5 }\n];\nexport const initialFilter = {\n  filter: {\n    text: \"\"\n  },\n  sortOrder: \"asc\", // asc||desc\n  sortField: \"id\",\n  pageNumber: 1,\n  pageSize: 5\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\nimport {isEqual, isFunction} from \"lodash\";\nimport {initialFilter} from \"./RemarksUIHelper\";\n\nconst RemarksUIContext = createContext();\n\nexport function useRemarksUIContext() {\n  return useContext(RemarksUIContext);\n}\n\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\n\nexport function RemarksUIProvider({ currentProductId, children }) {\n  const [productId, setProductId] = useState(currentProductId);\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback(nextQueryParams => {\n    setQueryParamsBase(prevQueryParams => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n  const [selectedId, setSelectedId] = useState(null);\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\n  const initRemark = {\n    id: undefined,\n    text: \"\",\n    type: 0,\n    dueDate: \"01/07/2020\",\n    carId: productId\n  };\n  useEffect(()=> {\n    initRemark.productId = currentProductId;\n    initRemark.carId = currentProductId;\n    setProductId(currentProductId);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentProductId]);\n  const openNewRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowEditRemarkDialog(true);\n  };\n  const openEditRemarkDialog = id => {\n    setSelectedId(id);\n    setShowEditRemarkDialog(true);\n  };\n  const closeEditRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowEditRemarkDialog(false);\n  };\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\n  const openDeleteRemarkDialog = id => {\n    setSelectedId(id);\n    setShowDeleteRemarkDialog(true);\n  };\n  const closeDeleteRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowDeleteRemarkDialog(false);\n  };\n\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\n  const openDeleteRemarksDialog = () => {\n    setShowDeleteRemarksDialog(true);\n  };\n  const closeDeleteRemarksDialog = () => {\n    setShowDeleteRemarksDialog(false);\n  };\n\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\n  const openFetchRemarksDialog = () => {\n    setShowFetchRemarksDialog(true);\n  };\n  const closeFetchRemarksDialog = () => {\n    setShowFetchRemarksDialog(false);\n  };\n\n  const value = {\n    ids,\n    setIds,\n    productId,\n    setProductId,\n    queryParams,\n    setQueryParams,\n    initRemark,\n    selectedId,\n    showEditRemarkDialog,\n    openNewRemarkDialog,    \n    openEditRemarkDialog,\n    closeEditRemarkDialog,\n    showDeleteRemarkDialog,\n    openDeleteRemarkDialog,\n    closeDeleteRemarkDialog,\n    showDeleteRemarksDialog,\n    openDeleteRemarksDialog,\n    closeDeleteRemarksDialog,\n    openFetchRemarksDialog,\n    closeFetchRemarksDialog,\n    showFetchRemarksDialog\n  };\n  \n  return (\n    <RemarksUIContext.Provider value={value}>\n      {children}\n    </RemarksUIContext.Provider>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  filter.text = searchText;\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function RemarksFilter() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      setQueryParams: remarksUIContext.setQueryParams,\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\n      queryParams: remarksUIContext.queryParams,\n    };\n  }, [remarksUIContext]);\n\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      remarksUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"form-filtration\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\n            <Formik\n              initialValues={{\n                searchText: \"\",\n              }}\n              onSubmit={(values) => {\n                applyFilter(values);\n              }}\n            >\n              {({\n                values,\n                handleSubmit,\n                handleBlur,\n                handleChange,\n                setFieldValue,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"searchText\"\n                      placeholder=\"Search\"\n                      onBlur={handleBlur}\n                      value={values.searchText}\n                      onChange={(e) => {\n                        setFieldValue(\"searchText\", e.target.value);\n                        handleSubmit();\n                      }}\n                    />\n                    <small className=\"form-text text-muted\">\n                      <b>Search</b> in all fields\n                    </small>\n                  </div>\n                </form>\n              )}\n            </Formik>\n          </div>\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\n            >\n              Create new remark\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as requestFromServer from \"./remarksCrud\";\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\n\nconst {actions} = remarksSlice;\n\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.list }));\n  if (!productId) {\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\n  }\n\n  return requestFromServer\n    .findRemarks(queryParams, productId)\n    .then(response => {\n      const { totalCount, entities } = response.data;\n      dispatch(actions.remarksFetched({ totalCount, entities }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find remarks\";\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\n    });\n};\n\nexport const fetchRemark = id => dispatch => {\n  if (!id) {\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\n  }\n\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .getRemarkById(id)\n    .then(response => {\n      const remark = response.data;\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find remark\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteRemark = id => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteRemark(id)\n    .then(response => {\n      dispatch(actions.remarkDeleted({ id }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete remark\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const createRemark = remarkForCreation => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .createRemark(remarkForCreation)\n    .then(response => {\n      const { remark } = response.data;\n      dispatch(actions.remarkCreated({ remark }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't create remark\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateRemark = remark => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateRemark(remark)\n    .then(() => {\n      dispatch(actions.remarkUpdated({ remark }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update remark\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteRemarks = ids => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteRemarks(ids)\n    .then(() => {\n      console.log(\"delete return\");\n      dispatch(actions.remarksDeleted({ ids }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete remarks\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n","import axios from \"axios\";\n\nexport const REMARKS_URL = \"api/remarks\";\n\n// CREATE =>  POST: add a new remark to the server\nexport function createRemark(remark) {\n  return axios.post(REMARKS_URL, { remark });\n}\n\n// READ\n// Server should return filtered remarks by productId\nexport function getAllProductRemarksByProductId(productId) {\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\n}\n\nexport function getRemarkById(remarkId) {\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\n}\n\n// Server should return sorted/filtered remarks and merge with items from state\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\nexport function findRemarks(queryParams, productId) {\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\n}\n\n// UPDATE => PUT: update the remark\nexport function updateRemark(remark) {\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\n}\n\n// DELETE => delete the remark\nexport function deleteRemark(remarkId) {\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\n}\n\n// DELETE Remarks by ids\nexport function deleteRemarks(ids) {\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\n}\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\n\nexport const ActionsColumnFormatter = (\n  cellContent,\n  row,\n  rowIndex,\n  { openEditRemarkDialog, openDeleteRemarkDialog }\n) => (\n  <>\n    <OverlayTrigger\n      overlay={<Tooltip id=\"customers-edit-tooltip\">Edit remark</Tooltip>}\n    >\n      <a\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n        onClick={() => openEditRemarkDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\n          />\n        </span>\n      </a>\n    </OverlayTrigger>\n\n    <> </>\n    <OverlayTrigger\n      overlay={<Tooltip id=\"customers-delete-tooltip\">Delete remark</Tooltip>}\n    >\n      <a\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n        onClick={() => openDeleteRemarkDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\n        </span>\n      </a>\n    </OverlayTrigger>\n  </>\n);\n","// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\nimport * as uiHelpers from \"./RemarksUIHelper\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n} from \"../../../../../../_metronic/_helpers\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarksTable() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      setIds: remarksUIContext.setIds,\n      queryParams: remarksUIContext.queryParams,\n      setQueryParams: remarksUIContext.setQueryParams,\n      productId: remarksUIContext.productId,\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog,\n    };\n  }, [remarksUIContext]);\n\n  // Getting curret state of products list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.remarks }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    remarksUIProps.setIds([]);\n    dispatch(\n      actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"ID\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"text\",\n      text: \"Text\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"dueDate\",\n      text: \"Due date\",\n      sort: false,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\n        openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: remarksUIProps.queryParams.pageSize,\n    page: remarksUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bordered={false}\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  remarksUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: remarksUIProps.ids,\n                  setIds: remarksUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function RemarksLoadingDialog() {\n  const { isLoading } = useSelector(\n    state => ({ isLoading: state.remarks.listLoading }),\n    shallowEqual\n  );\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarksDeleteDialog() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      setIds: remarksUIContext.setIds,\n      productId: remarksUIContext.productId,\n      queryParams: remarksUIContext.queryParams,\n      showDeleteRemarksDialog: remarksUIContext.showDeleteRemarksDialog,\n      closeDeleteRemarksDialog: remarksUIContext.closeDeleteRemarksDialog,\n    };\n  }, [remarksUIContext]);\n\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\n    shallowEqual\n  );\n\n  useEffect(() => {}, [isLoading, dispatch]);\n  useEffect(() => {\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\n      remarksUIProps.closeDeleteRemarksDialog();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.ids]);\n\n  const deleteRemarks = () => {\n    dispatch(actions.deleteRemarks(remarksUIProps.ids)).then(() => {\n      dispatch(\n        actions.fetchRemarks(\n          remarksUIProps.queryParams,\n          remarksUIProps.productId\n        )\n      ).then(() => {\n        remarksUIProps.setIds([]);\n        remarksUIProps.closeDeleteRemarksDialog();\n      });\n    });\n  };\n\n  return (\n    <Modal\n      show={remarksUIProps.showDeleteRemarksDialog}\n      onHide={remarksUIProps.closeDeleteRemarksDialog}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Remarks Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete selected remarks?</span>\n        )}\n        {isLoading && <span>Remarks are deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={remarksUIProps.closeDeleteRemarksDialog}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteRemarks}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarkDeleteDialog() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      id: remarksUIContext.selectedId,\n      setIds: remarksUIContext.setIds,\n      productId: remarksUIContext.productId,\n      queryParams: remarksUIContext.queryParams,\n      showDeleteRemarkDialog: remarksUIContext.showDeleteRemarkDialog,\n      closeDeleteRemarkDialog: remarksUIContext.closeDeleteRemarkDialog,\n    };\n  }, [remarksUIContext]);\n\n  // Remarks Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!remarksUIProps.id) {\n      remarksUIProps.closeDeleteRemarkDialog();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.id]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteRemark = () => {\n    // server request for deleting remark by id\n    dispatch(actions.deleteRemark(remarksUIProps.id)).then(() => {\n      // refresh list after deletion\n      dispatch(\n        actions.fetchRemarks(\n          remarksUIProps.queryParams,\n          remarksUIProps.productId\n        )\n      );\n      // clear selections list\n      remarksUIProps.setIds([]);\n      // closing delete modal\n      remarksUIProps.closeDeleteRemarkDialog();\n    });\n  };\n\n  return (\n    <Modal\n      show={remarksUIProps.showDeleteRemarkDialog}\n      onHide={remarksUIProps.closeDeleteRemarkDialog}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Remark Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete this remark?</span>\n        )}\n        {isLoading && <span>Remark is deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={remarksUIProps.closeDeleteRemarkDialog}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteRemark}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nconst selectedRemarks = (entities, ids) => {\n  const _remarks = [];\n  ids.forEach((id) => {\n    const remark = entities.find((el) => el.id === id);\n    if (remark) {\n      _remarks.push(remark);\n    }\n  });\n  return _remarks;\n};\n\nexport function RemarksFetchDialog() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      queryParams: remarksUIContext.queryParams,\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog,\n    };\n  }, [remarksUIContext]);\n\n  const { remarks } = useSelector(\n    (state) => ({\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids),\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\n      remarksUIProps.closeFetchRemarksDialog();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.ids]);\n\n  return (\n    <Modal\n      show={remarksUIProps.showFetchRemarksDialog}\n      onHide={remarksUIProps.closeFetchRemarksDialog}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Fetch selected elements\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\n          <div className=\"list-timeline-items\">\n            {remarks.map((remark) => (\n              <div className=\"list-timeline-item mb-3\" key={remark.id}>\n                <span className=\"list-timeline-text\">\n                  <span\n                    className=\"label label-lg label-light-success label-inline\"\n                    style={{ width: \"60px\" }}\n                  >\n                    ID: {remark.id}\n                  </span>{\" \"}\n                  <span className=\"ml-5\">{remark.text} </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={remarksUIProps.closeFetchRemarksDialog}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={remarksUIProps.closeFetchRemarksDialog}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Ok\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarksGrouping() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      openDeleteRemarksDialog: remarksUIContext.openDeleteRemarksDialog,\n      openFetchRemarksDialog: remarksUIContext.openFetchRemarksDialog,\n    };\n  }, [remarksUIContext]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\n        <div className=\"col-xl-12\">\n          <div className=\"form-group form-group-inline\">\n            <div className=\"form-label form-label-no-wrap\">\n              <label className=\"font-bold font-danger mt-5\">\n                <span>Selected records count: {remarksUIProps.ids.length}</span>\n              </label>\n            </div>\n            <div className=\"form-group-inline\">\n              <button\n                type=\"button\"\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\n                onClick={remarksUIProps.openDeleteRemarksDialog}\n              >\n                <i className=\"fa fa-trash\"></i> Delete All\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={remarksUIProps.openFetchRemarksDialog}\n              >\n                <i className=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useState, useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\n\nexport function RemarkEditDialogHeader({ id }) {\n  const [title, setTitle] = useState(\"\");\n  // Remarks Redux state\n  const { remarkForEdit, actionsLoading } = useSelector(\n    (state) => ({\n      remarkForEdit: state.remarks.remarkForEdit,\n      actionsLoading: state.remarks.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Remark\";\n    if (remarkForEdit && id) {\n      _title = \"Edit remark\";\n    }\n\n    setTitle(_title);\n    // eslint-disable-next-line\n  }, [remarkForEdit, actionsLoading]);\n\n  return (\n    <>\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\n      </Modal.Header>\n    </>\n  );\n}\n","// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Input,\n  Select,\n  DatePickerField,\n} from \"../../../../../../../_metronic/_partials/controls\";\n\n// Validation schema\nconst RemarkEditSchema = Yup.object().shape({\n  text: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Text is required\"),\n  type: Yup.number().required(\"Type is required\"),\n  dueDate: Yup.mixed()\n    .nullable(false)\n    .required(\"Due date is required\"),\n});\n\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={remark}\n        validationSchema={RemarkEditSchema}\n        onSubmit={(values) => saveRemark(values)}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\n              {actionsLoading && (\n                <div className=\"overlay-layer bg-transparent\">\n                  <div className=\"spinner spinner-lg spinner-success\" />\n                </div>\n              )}\n              <Form className=\"form form-label-right\">\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Field\n                      name=\"text\"\n                      component={Input}\n                      placeholder=\"Text\"\n                      label=\"Text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Select name=\"type\" label=\"Type\">\n                      <option value=\"0\">Info</option>\n                      <option value=\"1\">Note</option>\n                      <option value=\"2\">Reminder</option>\n                    </Select>\n                  </div>\n                </div>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                type=\"button\"\n                onClick={onHide}\n                className=\"btn btn-light btn-elevate\"\n              >\n                Cancel\n              </button>\n              <> </>\n              <button\n                type=\"submit\"\n                onClick={() => handleSubmit()}\n                className=\"btn btn-primary btn-elevate\"\n              >\n                Save\n              </button>\n            </Modal.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\nimport { RemarkEditForm } from \"./RemarkEditForm\";\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\n\nfunction getFormattedDate(date) {\n  if (typeof date === \"string\") {\n    return date;\n  }\n\n  var year = date.getFullYear();\n\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : \"0\" + month;\n\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : \"0\" + day;\n\n  return month + \"/\" + day + \"/\" + year;\n}\n\nexport function RemarkEditDialog() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      id: remarksUIContext.selectedId,\n      setIds: remarksUIContext.setIds,\n      productId: remarksUIContext.productId,\n      queryParams: remarksUIContext.queryParams,\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\n      initRemark: remarksUIContext.initRemark,\n    };\n  }, [remarksUIContext]);\n\n  // Remarks Redux state\n  const dispatch = useDispatch();\n  const { actionsLoading, remarkForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.remarks.actionsLoading,\n      remarkForEdit: state.remarks.remarkForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // server request for getting remark by seleted id\n    dispatch(actions.fetchRemark(remarksUIProps.id));\n  }, [remarksUIProps.id, dispatch]);\n\n  const saveRemark = (remark) => {\n    remark.dueDate = getFormattedDate(remark.dueDate);\n    if (!remarksUIProps.id) {\n      // server request for creating remarks\n      dispatch(actions.createRemark(remark)).then(() => {\n        // refresh list after deletion\n        dispatch(\n          actions.fetchRemarks(\n            remarksUIProps.queryParams,\n            remarksUIProps.productId\n          )\n        ).then(() => {\n          // clear selections list\n          remarksUIProps.setIds([]);\n          // closing edit modal\n          remarksUIProps.closeEditRemarkDialog();\n        });\n      });\n    } else {\n      // server request for updating remarks\n      dispatch(actions.updateRemark(remark)).then(() => {\n        // refresh list after deletion\n        dispatch(\n          // refresh list after deletion\n          actions.fetchRemarks(\n            remarksUIProps.queryParams,\n            remarksUIProps.productId\n          )\n        ).then(() => {\n          // clear selections list\n          remarksUIProps.setIds([]);\n          // closing edit modal\n          remarksUIProps.closeEditRemarkDialog();\n        });\n      });\n    }\n  };\n\n  return (\n    <Modal\n      show={remarksUIProps.showEditRemarkDialog}\n      onHide={remarksUIProps.closeEditRemarkDialog}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <RemarkEditDialogHeader id={remarksUIProps.id} />\n      <RemarkEditForm\n        saveRemark={saveRemark}\n        actionsLoading={actionsLoading}\n        remark={remarkForEdit || remarksUIProps.initRemark}\n        onHide={remarksUIProps.closeEditRemarkDialog}\n      />\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { RemarksFilter } from \"./RemarksFilter\";\nimport { RemarksTable } from \"./RemarksTable\";\nimport { RemarksLoadingDialog } from \"./RemarksLoadingDialog\";\nimport { RemarksDeleteDialog } from \"./RemarksDeleteDialog\";\nimport { RemarkDeleteDialog } from \"./RemarkDeleteDialog\";\nimport { RemarksFetchDialog } from \"./RemarksFetchDialog\";\nimport { RemarksGrouping } from \"./RemarksGrouping\";\nimport { RemarkEditDialog } from \"./remark-edit-dialog/RemarkEditDialog\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function Remarks() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return { ids: remarksUIContext.ids };\n  }, [remarksUIContext]);\n\n  return (\n    <>\n      <RemarksLoadingDialog />\n      <RemarkEditDialog />\n      <RemarkDeleteDialog />\n      <RemarksDeleteDialog />\n      <RemarksFetchDialog />\n      <div className=\"form margin-b-30\">\n        <RemarksFilter />\n        {remarksUIProps.ids.length > 0 && <RemarksGrouping />}\n      </div>\n      <RemarksTable />\n    </>\n  );\n}\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardHeaderToolbar,\n} from \"../../../../../../_metronic/_partials/controls\";\nimport { ProductEditForm } from \"./ProductEditForm\";\nimport { Specifications } from \"../product-specifications/Specifications\";\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\nimport { Remarks } from \"../product-remarks/Remarks\";\n\nconst initProduct = {\n  id: undefined,\n  model: \"\",\n  manufacture: \"Pontiac\",\n  modelYear: 2020,\n  mileage: 0,\n  description: \"\",\n  color: \"Red\",\n  price: 10000,\n  condition: 1,\n  status: 0,\n  VINCode: \"\",\n};\n\nexport function ProductEdit({\n  history,\n  match: {\n    params: { id },\n  },\n}) {\n  // Subheader\n  const suhbeader = useSubheader();\n\n  // Tabs\n  const [tab, setTab] = useState(\"basic\");\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\n  const { actionsLoading, productForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.products.actionsLoading,\n      productForEdit: state.products.productForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    dispatch(actions.fetchProduct(id));\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Product\";\n    if (productForEdit && id) {\n      _title = `Edit product '${productForEdit.manufacture} ${productForEdit.model} - ${productForEdit.modelYear}'`;\n    }\n\n    setTitle(_title);\n    suhbeader.setTitle(_title);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productForEdit, id]);\n\n  const saveProduct = (values) => {\n    if (!id) {\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\n    } else {\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\n    }\n  };\n\n  const btnRef = useRef();  \n  const saveProductClick = () => {\n    if (btnRef && btnRef.current) {\n      btnRef.current.click();\n    }\n  };\n\n  const backToProductsList = () => {\n    history.push(`/e-commerce/products`);\n  };\n\n  return (\n    <Card>\n      {actionsLoading && <ModalProgressBar />}\n      <CardHeader title={title}>\n        <CardHeaderToolbar>\n          <button\n            type=\"button\"\n            onClick={backToProductsList}\n            className=\"btn btn-light\"\n          >\n            <i className=\"fa fa-arrow-left\"></i>\n            Back\n          </button>\n          {`  `}\n          <button className=\"btn btn-light ml-2\">\n            <i className=\"fa fa-redo\"></i>\n            Reset\n          </button>\n          {`  `}\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary ml-2\"\n            onClick={saveProductClick}\n          >\n            Save\n          </button>\n        </CardHeaderToolbar>\n      </CardHeader>\n      <CardBody>\n        <ul className=\"nav nav-tabs nav-tabs-line \" role=\"tablist\">\n          <li className=\"nav-item\" onClick={() => setTab(\"basic\")}>\n            <a\n              className={`nav-link ${tab === \"basic\" && \"active\"}`}\n              data-toggle=\"tab\"\n              role=\"tab\"\n              aria-selected={(tab === \"basic\").toString()}\n            >\n              Basic info\n            </a>\n          </li>\n          {id && (\n            <>\n              {\" \"}\n              <li className=\"nav-item\" onClick={() => setTab(\"remarks\")}>\n                <a\n                  className={`nav-link ${tab === \"remarks\" && \"active\"}`}\n                  data-toggle=\"tab\"\n                  role=\"button\"\n                  aria-selected={(tab === \"remarks\").toString()}\n                >\n                  Product remarks\n                </a>\n              </li>\n              <li className=\"nav-item\" onClick={() => setTab(\"specs\")}>\n                <a\n                  className={`nav-link ${tab === \"specs\" && \"active\"}`}\n                  data-toggle=\"tab\"\n                  role=\"tab\"\n                  aria-selected={(tab === \"specs\").toString()}\n                >\n                  Product specifications\n                </a>\n              </li>\n            </>\n          )}\n        </ul>\n        <div className=\"mt-5\">\n          {tab === \"basic\" && (\n            <ProductEditForm\n              actionsLoading={actionsLoading}\n              product={productForEdit || initProduct}\n              btnRef={btnRef}\n              saveProduct={saveProduct}\n            />\n          )}\n          {tab === \"remarks\" && id && (\n            <RemarksUIProvider currentProductId={id}>\n              <Remarks />\n            </RemarksUIProvider>\n          )}\n          {tab === \"specs\" && id && (\n            <SpecificationsUIProvider currentProductId={id}>\n              <Specifications />\n            </SpecificationsUIProvider>\n          )}\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { Redirect, Switch } from \"react-router-dom\";\nimport { CustomersPage } from \"./customers/CustomersPage\";\nimport { ProductsPage } from \"./products/ProductsPage\";\nimport { ProductEdit } from \"./products/product-edit/ProductEdit\";\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../_metronic/layout\";\n\nexport default function eCommercePage() {\n  return (\n    <Suspense fallback={<LayoutSplashScreen />}>\n      <Switch>\n        {\n          /* Redirect from eCommerce root URL to /customers */\n          <Redirect\n            exact={true}\n            from=\"/e-commerce\"\n            to=\"/e-commerce/customers\"\n          />\n        }\n        <ContentRoute path=\"/e-commerce/customers\" component={CustomersPage} />\n        <ContentRoute path=\"/e-commerce/products/new\" component={ProductEdit} />\n        <ContentRoute\n          path=\"/e-commerce/products/:id/edit\"\n          component={ProductEdit}\n        />\n\n        <ContentRoute path=\"/e-commerce/products\" component={ProductsPage} />\n      </Switch>\n    </Suspense>\n  );\n}\n"],"sourceRoot":""}